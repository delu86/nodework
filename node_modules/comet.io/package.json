{
  "name": "comet.io",
  "version": "0.0.5",
  "description": "light-weight comet server & client",
  "main": "./lib/comet.io.js",
  "scripts": {
    "test": "./test/server.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/snakajima/comet.io"
  },
  "keywords": [
    "comet",
    "ajax",
    "push"
  ],
  "author": {
    "name": "Satoshi Nakajima",
    "email": "satoshi.nakajima@gmail.com"
  },
  "license": "MIT",
  "readme": "comet.io\n========\n\nLightweight comet server & client for Node.js\n\nServer\n------\n\n```js\nvar app = require('http').createServer(handler);\nvar file = new(require('node-static').Server)(__dirname + '/web', {});\nvar comet = require('../lib/comet.io.js').createServer();\n\napp.listen(8000);\nfunction handler(request, response) {\n  request.on('end', function() {\n    if (!comet.serve(request, response)) {\n      file.serve(request, response, function(err, res) {\n        if (err) { console.log(err); }\n      });\n    } \n  });\n}\n\ncomet.on('connection', function (socket) {\n  // do something when a client has connected\n  socket.emit('test.message', { something:'any json object here' });\n\n  socket.on('test.response', function(data) {\n    // do something when it receives a message from client\n  });\n});\n```\n\nClient\n------\n\n```js\n  socket = comet.connect();\n  socket.on('connect', function() {\n    // do something when it's connected for the first time\n  }).on('test.message', function (data) {\n    // do something, such as sending an message to the server\n    socket.emit('test.response', { something:'any json object' });\n  });\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/snakajima/comet.io/issues"
  },
  "_id": "comet.io@0.0.5",
  "dist": {
    "shasum": "d3b7f3d37c88fbf24ea6c457349365dc77fc7e08"
  },
  "_from": "comet.io@",
  "_resolved": "https://registry.npmjs.org/comet.io/-/comet.io-0.0.5.tgz"
}
